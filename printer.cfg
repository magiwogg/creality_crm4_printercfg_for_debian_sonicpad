[include mainsail.cfg]
# !CR-M4
# printer_size: 450x450x470mm
# version: 3.6
# To use this config, during "make menuconfig" select the STM32F401
# with a "64KiB bootloader" and  USTART1(PA10/PA9)
# communication.

# Flash this firmware by copying "out/klipper.bin" to a SD card and
# turning on the printer with the card inserted. The firmware
# filename must end in ".bin" and must not match the last filename
# that was flashed.

# See docs/Config_Reference.md for a description of parameters.

###fluidd set
[virtual_sdcard]
path: ~/printer_data/gcodes

[display_status]

[pause_resume]

[stepper_x]
step_pin: PB9
dir_pin: PC13
enable_pin: !PD7
rotation_distance: 40
microsteps: 16
endstop_pin: PE9
position_min: -5
position_endstop: -5
position_max: 450
homing_speed: 80

[stepper_y]
step_pin: PB8
dir_pin: !PE6
enable_pin: !PD7
rotation_distance: 40
microsteps: 16
endstop_pin: !PE10
position_min: -2
position_endstop: 0
position_max: 450
homing_speed: 80

[stepper_z]
step_pin: PB7
dir_pin: PE5
enable_pin: !PD7
rotation_distance: 8
microsteps: 16
endstop_pin: probe:z_virtual_endstop           #enable to use bltouch
#endstop_pin: !PA15                #disable to use bltouch
#position_endstop: -0.1
position_min: -10
position_max: 470
homing_speed: 5
second_homing_speed: 1
homing_retract_dist: 2.0

[extruder]
pressure_advance: 0.12
max_extrude_only_distance: 1000.0
step_pin: PB5
dir_pin: PE3
enable_pin: !PD7
rotation_distance: 7.5
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD14
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC1
#control: pid
#pid_kp: 29.535
#pid_ki: 2.344
#pid_kd: 93.037
min_temp: 0
max_temp: 315
max_power: 0.5 #should be lower for CHCB-OT

[heater_bed]
heater_pin: PC10
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
#control: pid
#pid_kp: 69.802
#pid_ki: 0.706
#pid_kd: 1724.975
min_temp: 0
max_temp: 130

[idle_timeout] timeout: 172800

[verify_heater extruder]
check_gain_time: 200
hysteresis: 5

[fan]
pin: PA2
kick_start_time: 0.5

[heater_fan my_nozzle_fan]
pin: PA1
heater: extruder
heater_temp: 50
max_power: 1
shutdown_speed : 0

[output_pin power]
pin: PD0
#   The pin to configure as an output. This parameter must be
#   provided.
#pwm: False
#   Set if the output pin should be capable of pulse-width-modulation.
#   If this is true, the value fields should be between 0 and 1; if it
#   is false the value fields should be either 0 or 1. The default is
#   False.
value: 1
#   The value to initially set the pin to during MCU configuration.
#   The default is 0 (for low voltage).
#shutdown_value:
#   The value to set the pin to on an MCU shutdown event. The default
#   is 0 (for low voltage).
#cycle_time: 0.100
#   The amount of time (in seconds) per PWM cycle. It is recommended
#   this be 10 milliseconds or greater when using software based PWM.
#   The default is 0.100 seconds for pwm pins.
#hardware_pwm: False
#   Enable this to use hardware PWM instead of software PWM. When
#   using hardware PWM the actual cycle time is constrained by the
#   implementation and may be significantly different than the
#   requested cycle_time. The default is False.
#scale:
#   This parameter can be used to alter how the 'value' and
#   'shutdown_value' parameters are interpreted for pwm pins. If
#   provided, then the 'value' parameter should be between 0.0 and
#   'scale'. This may be useful when configuring a PWM pin that
#   controls a stepper voltage reference. The 'scale' can be set to
#   the equivalent stepper amperage if the PWM were fully enabled, and
#   then the 'value' parameter can be specified using the desired
#   amperage for the stepper. The default is to not scale the 'value'
#   parameter.
#maximum_mcu_duration:
#static_value:
#   These options are deprecated and should no longer be specified.

[mcu]
serial:/dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[mcu rpi]
serial: /tmp/klipper_host_mcu

[adxl345]
cs_pin: rpi:None
spi_speed: 2000000
spi_bus: spidev2.0

[resonance_tester]
accel_chip: adxl345
accel_per_hz: 70
probe_points: 225,225,10

[input_shaper]
#shaper_type_x = 2hump_ei
#shaper_freq_x = 67.2
#shaper_type_y = 2hump_ei
#shaper_freq_y = 71.4


[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin: ^!PE13

[bltouch]
sensor_pin: ^PD13       #signal check port ^stand for pull up
control_pin: PD12       #singal control prot
x_offset: -30.0
y_offset: -40.0
#z_offset: 0          #z off_set configuration
speed: 20.0
stow_on_each_sample: false #high speed for bltoch,
samples: 1
#probe_with_touch_mode = true

[safe_z_home]
home_xy_position:260,260
speed: 240
z_hop: 10
z_hop_speed: 5

[bed_mesh]
speed: 150
mesh_min: 40,45         #need to handle head distance with bl_touch
mesh_max: 420,410       #max probe range
probe_count: 7,7
fade_start: 1
fade_end: 10
fade_target: 0
algorithm: bicubic

[gcode_macro G29]
gcode:
  G28
  bed_mesh_calibrate
  G1 X0 Y0 Z10 F4200

[force_move]
enable_force_move: true
#   Set to true to enable FORCE_MOVE and SET_KINEMATIC_POSITION
#   extended G-Code commands. The default is false

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %} 

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  TURN_OFF_HEATERS
  CANCEL_PRINT_BASE

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    RESTORE_GCODE_STATE NAME=M600_state
 
[gcode_macro PAUSE_MACRO]
description: Pauses Print
gcode:
    PAUSE
    SET_IDLE_TIMEOUT TIMEOUT={ 30 * 60 }
 
[gcode_macro FC_RESUME]
description: Resume print after Filament Change
gcode:
    ##### read E from pause macro #####
    {% set E = printer["gcode_macro PAUSE"].extrude|float %}
    SET_IDLE_TIMEOUT TIMEOUT={ 10 * 60 }
    G1 E-{ E }
    # Reset extruder position
    G92 E0
    RESUME
 
[gcode_macro UNLOAD_FILAMENT]
description: Unloads Filament from extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=UNLOAD_state
    {% set Z = params.Z|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ Z, z_diff ] | min%}
 
    G91                   # relative positioning
    G0 Z{ z_safe_lift }
    # Reset extruder position
    G92 E0
    G1 E5.0 F300        # extrude a little
    G1 E-50 F{ 10 * 60 } # perform the unload
    G1 E-50 F{ 5 * 60 }   # finish the unload
    RESTORE_GCODE_STATE NAME=UNLOAD_state
  {% endif %}
 
[gcode_macro PURGE]
description: Extrudes filament, used to clean out previous filament
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
  {% set PURGE_AMOUNT = params.PURGE_AMOUNT|default(40)|float %}
    SAVE_GCODE_STATE NAME=PURGE_state
    G91                   # relative coords
    G1 E{PURGE_AMOUNT} F{ 5 * 60 }  # purge
    RESTORE_GCODE_STATE NAME=PURGE_state
  {% endif %}
 
[gcode_macro LOAD_FILAMENT]
description: Loads filament into the extruder
gcode:
  {% if printer.extruder.temperature < 180 %}
    {action_respond_info("Extruder temperature too low")}
  {% else %}
    SAVE_GCODE_STATE NAME=LOAD_state
    G91                   # Relative coords
    G1 E50 F{ 5 * 60 }  # extrude
    G4 P{ 0.9 * 1000 }    # dwell (ms)
    G1 E25.0 F{ 5 * 60 }  # extrude a little more
    _ENABLE_FS
    RESTORE_GCODE_STATE NAME=LOAD_state
  {% endif %}
 
[gcode_macro _DISABLE_FS]
description: placeholder, disables filament sensor that might trigger an M600 in the middle of a load/unload/M600...
gcode:
    SET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=0
 
[gcode_macro _ENABLE_FS]
description: placeholder, enables filament sensor
gcode:
    SET_FILAMENT_SENSOR SENSOR=RunoutSensor ENABLE=1
 
[gcode_macro HEAT_FILAMENT_CHANGE]
description: Heats up the extruder to get ready for Filament Change
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(200)|float %}
  {% set Z = params.Z|default(50)|float %}
  {% set X = params.X|default(110)|float %}
  {% set Y = params.Y|default(110)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  HOME_CHECK
  G1 Z{Z} F500
  G1 X{X} Y{Y} F6000
 
[gcode_macro COOL]
description: Turns off all heaters
gcode:
  TURN_OFF_HEATERS
 
[gcode_macro PREHEAT_PLA]
description: Preheats extruder and bed for PLA printing, extruder set to 150 to prevent filament leaking while homing etc
gcode:
  {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(150)|float %}
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER_TEMP}
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}

[gcode_macro FORCE_HOME_XY]
description: set axis as homed and let Z axis move after homing XY
gcode:
  {% set Z = params.Z|default(50)|float %}
  G28 X Y
  SET_KINEMATIC_POSITION Z={Z}

[gcode_macro FORCE_HOME_Z]
description: set axis as homed and set Z azis
gcode:
  {% set Z = params.Z|default(50)|float %}
  SET_KINEMATIC_POSITION Z={Z}  
 
[gcode_macro BED_MESH]
description: Heats bed, makes a mesh and saves it
gcode:
  {% set BED_TEMP = params.BED_TEMP|default(60)|float %} 
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={BED_TEMP}
  HOME_CHECK
  M190 S{BED_TEMP}
  BED_MESH_CLEAR
  BED_MESH_CALIBRATE
  TURN_OFF_HEATERS
  SAVE_CONFIG
 
[gcode_macro DISABLE_STEPPERS]
description: Disables the printers stepper motors
gcode:
  M84 X Y E
 
[gcode_macro PID_EXTRUDER]
description: PID Tune for the Extruder
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(200)|float %} 
  PID_CALIBRATE HEATER=extruder TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG
 
[gcode_macro PID_BED]
description: PID Tune for the Bed
gcode:
  {% set TARGET_TEMP = params.TARGET_TEMP|default(60)|float %} 
  PID_CALIBRATE HEATER=heater_bed TARGET={TARGET_TEMP}
  TURN_OFF_HEATERS
  SAVE_CONFIG
 
[gcode_macro NOZZLE_MID]
description: Moves nozzle to the center of the bed
gcode:
  {% set Z = params.Z|default(10)|float %}
  HOME_CHECK
  G1 Z{Z} F500
  G1 X110 Y110 F6000
 
[gcode_macro home_check]
description: Checks if the printer is homed, it not it homes the printer
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
  G28
  {% endif %}
 
[gcode_macro SHOW_PRINT]
description: Moves the extruder out of the way and bed forward
gcode:
    HOME_CHECK
    {% set Z = params.Z|default(50)|int %}
    {% set axis_max = printer.toolhead.axis_maximum %}
    {% set pos = printer.toolhead.position %}
 
    {% set z_diff = axis_max.z - pos.z %}
    {% set z_safe_lift = [ Z, z_diff ] | min%}
    G1 Z{ z_safe_lift }
    G1 X10 Y220 F4000
 
[gcode_macro ZOffset_Setup]
description: Starts Z-Offset Calibration, under 30 degrees Celsius
gcode:
  {% if printer.heater_bed.temperature > 30 %}
    {action_respond_info("Bed temperature too high")}
  {% elif printer.extruder.temperature > 30 %}
    {action_respond_info("Extruder temperature too High")}
  {% else %}
  G28
  PROBE_CALIBRATE
  {% endif %}
 
[gcode_macro Z_Down_01]
description: Moves Z down by 0.1
gcode:
  TESTZ Z=-.1
 
[gcode_macro Z_Up_01]
description: Moves Z up by 0.1
gcode:
  TESTZ Z=+.1
 
[gcode_macro Z_Low_Half]
description: Sets Z between current value and previous lower value
gcode:
  TESTZ Z=-
 
[gcode_macro Z_High_Half]
description: Sets Z between current value and previous higher value
gcode:
  TESTZ Z=+
 
[gcode_macro Accept_Save]
description: Accepts the Z-Offset and saves the config
gcode:
  ACCEPT
  SAVE_CONFIG
 
[gcode_macro Abort_Setup]
description: Aborts the Z-Offset calibration
gcode:
  ABORT

[gcode_macro START_PRINT]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    
    # Start nozzle heating
    M104 S{EXTRUDER_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    
    BED_MESH_PROFILE LOAD=default
    G92 E0 ; Reset Extruder
    G28 ; Home all axes

    G1 Z2 F240 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X2 Y10 F3000 
    G1 Z0.28 F240
    G92 E0
    G1 Y190 E15 F1500 ; intro line
    G1 X2.3 F5000
    G92 E0
    G1 Y10 E15 F1200 ; intro line
    G92 E0
    G1 Z2.0 F3000 ; Move Z Axis up little to prevent scratching of Heat Bed
    G1 X5 Y20 Z0.3 F5000.0 ; Move over to prevent blob squish

[gcode_macro RESUME_REST_HOME]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Start nozzle heating
    M104 S{EXTRUDER_TEMP}
    G92 E0 ; Reset Extruder
    G28 ; Home all axes
    M106 S255

    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}

[gcode_macro RESUME_REST_NOHOME]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER_TEMP|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Start nozzle heating
    M104 S{EXTRUDER_TEMP}
    G92 E0 ; Reset Extruder
    M106 S255

    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    

[gcode_macro END_PRINT]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84

[gcode_arcs]
#resolution: 1.0

[printer]
kinematics: cartesian
max_velocity: 300
max_accel: 2000
max_z_velocity: 10
max_z_accel: 300
square_corner_velocity: 5.0

[include timelapse.cfg]

[exclude_object]
[include moonraker_obico_macros.cfg]

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 2.185
#*#
#*# [bed_mesh default]
#*# version = 1
#*# points =
#*# 	  -0.207500, -0.232500, -0.272500, -0.335000, -0.305000, -0.307500, -0.215000
#*# 	  -0.035000, -0.097500, -0.147500, -0.050000, -0.195000, 0.072500, -0.142500
#*# 	  -0.012500, -0.017500, -0.050000, -0.067500, -0.040000, -0.095000, -0.040000
#*# 	  -0.032500, -0.002500, 0.062500, 0.032500, -0.015000, 0.105000, -0.125000
#*# 	  -0.122500, 0.017500, 0.297500, 0.075000, 0.140000, 0.110000, -0.165000
#*# 	  -0.030000, -0.130000, -0.022500, 0.005000, 0.007500, -0.055000, -0.122500
#*# 	  -0.385000, -0.217500, -0.077500, 0.007500, 0.002500, -0.077500, -0.172500
#*# x_count = 7
#*# y_count = 7
#*# mesh_x_pps = 2
#*# mesh_y_pps = 2
#*# algo = bicubic
#*# tension = 0.2
#*# min_x = 40.0
#*# max_x = 419.98
#*# min_y = 45.0
#*# max_y = 409.97999999999996
#*#
#*# [input_shaper]
#*# shaper_type_x = mzv
#*# shaper_freq_x = 43.2
#*# shaper_type_y = 2hump_ei
#*# shaper_freq_y = 48.8
#*#
#*# [extruder]
#*# control = pid
#*# pid_kp = 26.999
#*# pid_ki = 8.182
#*# pid_kd = 22.274
#*#
#*# [heater_bed]
#*# control = pid
#*# pid_kp = 69.400
#*# pid_ki = 0.717
#*# pid_kd = 1678.612
